# Backed Project Setup and Configuration
### Django project and app set up, ready to connect to PostgreSQL and use Django REST Framework.

---

### Initialize Django Project:

```bash
django-admin startproject job_management_backend ...
cd backend
python -m venv venv
source venv/bin/activate # On Windows: .\venv\Scripts\activate
pip install django djangorestframework psycopg2-binary django-cors-headers
python manage.py startapp jobs
```

### Configure settings.py:
####Adding jobs, rest_framework, and corsheaders to INSTALLED_APPS.
####Seting PostgreSQL database connection.

```bash
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'job_management_db',
        'USER': 'your_postgres_user',
        'PASSWORD': 'your_postgres_password',
        'HOST': 'localhost', # Or your PostgreSQL host
        'PORT': '5432',
    }
}
```

#### Configure CORS_ALLOWED_ORIGINS to allow your React frontend to communicate with the backend. For development, you can use http://localhost:3000 (or whatever port your React app runs on).

```bash
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000", # React development server
    # Add production frontend URL here when deploying
]
```
#### Add corsheaders.middleware.CorsMiddleware to MIDDLEWARE at the top of the list.

### Run Initial Migrations:

```bash
python manage.py migrate

## Summary:
### INSTALLED_APPS updated with:

'rest_framework'

'corsheaders'

'jobs'

### Switched from SQLite to PostgreSQL connection.
### Added CORS middleware.
### Configured CORS_ALLOWED_ORIGINS for React frontend development.